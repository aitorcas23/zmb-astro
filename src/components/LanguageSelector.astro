---
import { notNull } from "@utils/filters";
import { availableLanguageTags, languageTag } from "@paraglide/runtime.js";

interface Props {
	translatedUrls: { [key: string]: string };
	lang?: string;
	extraClass?: string;
	acordeon?: boolean;
}

const { translatedUrls, lang: mainLang, extraClass, acordeon } = Astro.props;
console.log(availableLanguageTags);
const links = availableLanguageTags
	.map((lang) => {
		const isCurrentLanguage = lang == (mainLang || languageTag());
		if (!isCurrentLanguage) {
			const linkText = lang.toUpperCase();
			return {
				text: linkText,
				href: translatedUrls[lang],
			};
		}
	})
	.filter(notNull);

const firstLang = links[0];
---

{
	acordeon ? (
		<a
			class="p-2 transition-colors duration-150 ease-out hover:text-zmb hover:underline"
			href={firstLang.href}
		>
			{languageTag().toUpperCase()}
		</a>
	) : (
		<>
			<div class="inline-block h-9 min-h-[1em] w-0.5 self-center bg-gray-900/25 dark:bg-white/10" />
			<a
				class="p-2 transition-colors duration-150 ease-out hover:text-zmb hover:underline"
				href={firstLang.href}
			>
				{languageTag().toUpperCase()}
			</a>
		</>
	)
}
