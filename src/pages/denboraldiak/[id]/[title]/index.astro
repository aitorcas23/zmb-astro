---
import { localizePath } from "astro-i18next";
import { notProvidedError, notANumberError, notFoundError } from "@utils/errorLogs";
import { notFoundResponse } from "@utils/httpResponses";
import { getSeasonById } from "@utils/apiCalls/seasons";
import i18next, { t, changeLanguage } from "i18next";
import ContentLayout from "@layouts/ContentLayout.astro";
import Title from "@components/Title.astro";
import Subtitle from "@components/Subtitle.astro";
import { getAlt, getImage } from "@utils/mediaProcessors";
import ConcertCard from "@components/ConcertCard.astro";

changeLanguage("eu");

const { title, id } = Astro.params;
if (title === undefined || id === undefined) {
	if (!title) {
		notProvidedError("title");
	}
	if (!id) {
		notProvidedError("id");
	}
	return notFoundResponse();
}
const intId = parseInt(id);
if (isNaN(intId)) {
	notANumberError("id");
	return notFoundResponse();
}
const season = await getSeasonById(intId, i18next.language, 1);
if (!season) {
	notFoundError("season", { prop: "id", value: id });
	return notFoundResponse();
}
if (season.slug !== title) {
	notFoundError("season", { prop: "id", value: id }, { prop: "title", value: title });
	return notFoundResponse();
}
let locales: {
	[key: string]: string;
} = {};
for (const locale in i18next.languages) {
	if (locale === i18next.language) continue;
	const translatedSeason = await getSeasonById(intId, locale, 0);
	if (translatedSeason) {
		locales[locale] = `${localizePath("denboraldiak")}/${id}/${translatedSeason.slug}`;
	}
}
---

<ContentLayout title={season.title ?? "noTitle"} translatedUrls={locales}>
	<Title>{season.title}</Title>
	<Subtitle>{season.years}</Subtitle>
	<div class="mt-5 flex flex-col gap-8 md:flex-row">
		{
			season.image && (
				<img
					class="mx-auto flex-shrink flex-grow basis-0 md:w-1/2"
					src={getImage("l", season.image)}
					alt={getAlt(season.image)}
				/>
			)
		}
		{season.description}
	</div>
	{
		season.concerts && season.concerts.length > 0 && (
			<>
				<h2 class="mb-8 mt-12 text-center text-3xl font-bold lg:text-4xl">
					{t("seasons:concerts.index")}
				</h2>
				<div class="mt-8 flex flex-wrap justify-center gap-4">
					{season.concerts.map((concert) => {
						if (typeof concert === "number") return;
						return (
							<ConcertCard
								title={concert.title}
								date={concert.date ? new Date(concert.date) : undefined}
								description={concert.description ?? undefined}
								image={getImage("s", concert.image)}
								alt={getAlt(concert.image) ?? concert.title}
								link={`${localizePath("denboraldiak")}/${season.id}/${season.slug}/${concert.id}/${concert.slug}`}
								past={concert.date ? new Date(concert.date) < new Date() : undefined}
							/>
						);
					})}
				</div>
			</>
		)
	}
</ContentLayout>
