---
import { notProvidedError, notANumberError, notFoundError } from "@utils/errorLogs";
import { notFoundResponse } from "@utils/httpResponses";
import { getMediaEntryById } from "@utils/apiCalls/mediaEntries";
import { languageTag } from "@paraglide/runtime";
import { localizePathname } from "@utils/linking";

const { id } = Astro.params;
if (id === undefined) {
	notProvidedError("id");
	return notFoundResponse();
}
const intId = parseInt(id);
if (isNaN(intId)) {
	notANumberError("id");
	return notFoundResponse();
}
const entry = await getMediaEntryById(intId, languageTag(), 0);
if (!entry) {
	notFoundError("season", { prop: "id", value: id });
	return notFoundResponse();
}
return Astro.redirect(
	`${localizePathname("/mediateka/edukia", languageTag())}/${id}/${entry.slug}`,
	301,
);
---
