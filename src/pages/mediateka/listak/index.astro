---
import { getMediaLists } from "@utils/apiCalls/mediaLists";
import ContentLayout from "@layouts/ContentLayout.astro";
import Title from "@components/Title.astro";
import MediaCard from "@components/MediaCard.astro";
import { getMediaEntryAlt, getMediaEntryThumbnail } from "@utils/mediaEntryProcessors";
import HrLink from "@components/HrLink.astro";
import { availableLanguageTags, languageTag } from "@paraglide/runtime";
import { localizePathname } from "@utils/linking";
import * as m from "@paraglide/messages";

const lists = await getMediaLists(languageTag(), 2);

let translatedUrls: { [locale: string]: string } = {};
for (const locale of availableLanguageTags) {
	if (locale == languageTag()) continue;
	translatedUrls[locale] = localizePathname("/", locale);
}
---

<ContentLayout title={m.media_lists_title()} {translatedUrls}>
	<Title>{m.media_lists_title()}</Title>
	{
		lists.map((list) => (
			<>
				<h2 class="my-8 text-center text-3xl font-bold lg:text-4xl">{list.title}</h2>
				<div class="flex flex-wrap justify-center gap-4">
					{list.media &&
						list.media.splice(0, 3).map((entry) => {
							if (typeof entry !== "number") {
								return (
									<MediaCard
										title={entry.title}
										description={entry.description ?? undefined}
										image={getMediaEntryThumbnail("s", entry)}
										alt={getMediaEntryAlt(entry)}
										link={`${localizePathname("/mediateka/edukia", languageTag())}/${entry.id}/${entry.slug}`}
									/>
								);
							}
						})}
				</div>
				<HrLink
					href={`${localizePathname("/mediateka/listak", languageTag())}/${list.id}/${list.slug}`}
				>
					{m.media_lists_seeContent()}
				</HrLink>
			</>
		))
	}
</ContentLayout>
