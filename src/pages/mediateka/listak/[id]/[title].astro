---
import { notProvidedError, notANumberError, notFoundError } from "@utils/errorLogs";
import { notFoundResponse } from "@utils/httpResponses";
import { getMediaListById } from "@utils/apiCalls/mediaLists";
import ContentLayout from "@layouts/ContentLayout.astro";
import MediaCard from "@components/MediaCard.astro";
import { getMediaEntryAlt, getMediaEntryThumbnail } from "@utils/mediaEntryProcessors";
import { availableLanguageTags, languageTag } from "@paraglide/runtime";
import { localizePathname } from "@utils/linking";
import * as m from "@paraglide/messages";

const { id, title } = Astro.params;
if (id === undefined || title === undefined) {
	if (id === undefined) notProvidedError("id");
	if (title === undefined) notProvidedError("title");
	return notFoundResponse();
}
const intId = parseInt(id);
if (isNaN(intId)) {
	notANumberError("id");
	return notFoundResponse();
}
const list = await getMediaListById(intId, languageTag(), 2);
if (!list || list.slug !== title) {
	notFoundError("season", { prop: "id", value: id }, { prop: "title", value: title });
	return notFoundResponse();
}
let locales: {
	[key: string]: string;
} = {};
for (const locale of availableLanguageTags) {
	if (locale === languageTag()) continue;
	const translatedList = await getMediaListById(intId, locale, 0);
	if (translatedList) {
		locales[locale] =
			`${localizePathname("/mediateka/listak/", locale)}/${id}/${translatedList.slug}`;
	}
}
---

<ContentLayout title={m.media_lists_title()} translatedUrls={locales}>
	<h1
		class="pt-3 text-center text-4xl font-extrabold uppercase text-gray-900 md:pt-6 lg:pt-10 lg:text-5xl"
	>
		{list.title}
	</h1>
	<div class="mt-16 flex flex-wrap justify-center gap-4">
		{
			list.media &&
				list.media.map(
					(entry) =>
						typeof entry !== "number" && (
							<MediaCard
								title={entry.title}
								description={entry.description ?? undefined}
								image={getMediaEntryThumbnail("s", entry)}
								alt={getMediaEntryAlt(entry)}
								link={`${localizePathname("/mediateka/edukia", languageTag())}/${entry.id}/${entry.slug}`}
							/>
						),
				)
		}
	</div>
</ContentLayout>
