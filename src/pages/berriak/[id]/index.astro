---
import { notProvidedError, notANumberError, notFoundError } from "@utils/errorLogs";
import { notFoundResponse } from "@utils/httpResponses";
import { getNewsById } from "@utils/apiCalls/news";
import { languageTag } from "@paraglide/runtime";
import { localizePathname } from "@utils/linking";

const { id } = Astro.params;
if (id === undefined) {
	notProvidedError("id");
	return notFoundResponse();
}
const intId = parseInt(id);
if (isNaN(intId)) {
	notANumberError("id");
	return notFoundResponse();
}
const news = await getNewsById(intId, languageTag(), 0);
if (!news) {
	notFoundError("season", { prop: "id", value: id });
	return notFoundResponse();
}
return Astro.redirect(`${localizePathname("/berriak", languageTag())}/${id}/${news.slug}`, 301);
---
