---
import Subtitle from "@components/Subtitle.astro";
import ContentLayout from "@layouts/ContentLayout.astro";
import { availableLanguageTags, languageTag } from "@paraglide/runtime";
import { getNewsById } from "@utils/apiCalls/news";
import { notANumberError, notFoundError, notProvidedError } from "@utils/errorLogs";
import { notFoundResponse } from "@utils/httpResponses";
import { localizePathname } from "@utils/linking";
import { getAlt, getImage } from "@utils/mediaProcessors";

const { id, title } = Astro.params;
if (id === undefined || title === undefined) {
	if (id === undefined) notProvidedError("id");
	if (title === undefined) notProvidedError("title");
	return notFoundResponse();
}
const intId = parseInt(id);
if (isNaN(intId)) {
	notANumberError("id");
	return notFoundResponse();
}
const news = await getNewsById(intId, languageTag(), 1);
if (!news) {
	notFoundError("season", { prop: "id", value: id });
	return notFoundResponse();
}
let translatedUrls: { [key: string]: string } = {};
for (const locale of availableLanguageTags) {
	if (locale === languageTag()) continue;
	const translatedNews = await getNewsById(intId, locale, 0);
	if (translatedNews) {
		translatedUrls[locale] = `${localizePathname("/berriak", locale)}/${id}/${translatedNews.slug}`;
	}
}
---

<ContentLayout title={news.title ?? "NoTitle"} {translatedUrls}>
	<h1
		class="pt-3 text-center text-4xl font-extrabold uppercase text-gray-900 md:pt-6 lg:pt-10 lg:text-5xl"
	>
		{news.title}
	</h1>
	{news.author && <Subtitle>{news.author}</Subtitle>}
	{
		news.image && (
			<img
				class="mx-auto my-8"
				src={getImage("l", news.image)}
				alt={getAlt(news.image)}
				loading="lazy"
				decoding="async"
			/>
		)
	}
	{
		news.content && (
			<span
				class="format format-base mx-auto mt-16 lg:format-lg format-h1:text-center format-h1:uppercase format-li:ml-8 format-li:text-gray-900"
				set:html={news.content_html}
			/>
		)
	}
</ContentLayout>
